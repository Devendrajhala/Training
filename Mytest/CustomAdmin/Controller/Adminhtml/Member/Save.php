<?php


namespace Mytest\CustomAdmin\Controller\Adminhtml\Member;

use Magento\Backend\App\Action;
use Magento\Backend\Model\View\Result\RedirectFactory;
use Magento\Framework\App\ResponseInterface;
use Mytest\CustomAdmin\Model\AffiliateMember;

class Save extends Action
{
    protected $model;
    protected $redirectFactory;

    public function __construct(
        RedirectFactory $redirectFactory,
        AffiliateMember $affiliateMember,
        Action\Context $context)
    {
        $this->redirectFactory=$redirectFactory;
        $this->model=$affiliateMember;
        parent::__construct($context);
    }


    protected function _isAllowed()
    {
        return $this->_authorization->isAllowed('Mytest_CustomAdmin::parent');
        // TODO: Change the autogenerated stub

    }

    /**
     * Execute action based on request and return result
     *
     * Note: Request will be added as operation argument in future
     *
     * @return \Magento\Framework\Controller\ResultInterface|ResponseInterface
     * @throws \Exception
     */
    public function execute()
    {
        $data =$this->getRequest()->getPostValue();
        $resultRedirect = $this->redirectFactory->create();

        if($data)
        {
                $id=$data['entity_id'];
                if($id)
                {
                    $model = $this->model->load($id);
                }else{
                    unset($data['entity_id']);
                    unset($data['form_key']);
                }
                $data['class']=implode(',',$data['class']);
                $data['country']=implode(',',$data['country']);
            $model= $this->model->setData($data);

        }

        try{
            $model->save();
            $this->messageManager->addSuccessMessage('Member Saved successfully');
            $this->_getSession()->setFormData(false);
            if($this->getRequest()->getParam('back'))
            {
                return $resultRedirect->setPath('*/*/edit', ['id' => $model->getId(), '_current' => true]);
            }
            return $resultRedirect->setPath('*/*/index');

        }
        catch(\Exception $e)
        {
            $this->messageManager->addErrorMessage($e->getMessage());
        }


        return $resultRedirect->setPath('*/*/index');
    }
}
